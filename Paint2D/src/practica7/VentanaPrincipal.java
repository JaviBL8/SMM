/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica7;


import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Transparency;
import java.awt.color.ColorSpace;
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ColorConvertOp;
import java.awt.image.ColorModel;
import java.awt.image.ComponentColorModel;
import java.awt.image.ConvolveOp;
import java.awt.image.DataBuffer;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.LookupTable;
import java.awt.image.RescaleOp;
import java.awt.image.WritableRaster;
import java.beans.PropertyVetoException;
import sm.jbl.herramientas.Herramientas;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import sm.image.EqualizationOp;
import sm.jbl.image.Umbralizacion;
import sm.image.KernelProducer;
import sm.image.LookupTableProducer;
import sm.image.TintOp;
import sm.jbl.graficos.Figura;
import sm.jbl.image.SepiaOp;
import sm.jbl.iu.ColorChooserButton;
/**
 *
 * @author JaviBl8
 */
public class VentanaPrincipal extends javax.swing.JFrame {  
    
    java.awt.Color[] colores = { java.awt.Color.BLACK, java.awt.Color.RED, java.awt.Color.BLUE, java.awt.Color.WHITE, java.awt.Color.YELLOW, java.awt.Color.GREEN };
    private Point2D posicion = new Point2D.Double();
    private BufferedImage imgSource, imgAux;
    private VentanaInterna vi;
    
    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() throws PropertyVetoException{
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jToggleButtonLapiz.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        buttonGroupOpciones = new javax.swing.ButtonGroup();
        jToolBarHerramientas = new javax.swing.JToolBar();
        jButtonNuevo = new javax.swing.JButton();
        jButtonAbrir = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jToggleButtonLapiz = new javax.swing.JToggleButton();
        jToggleButtonLinea = new javax.swing.JToggleButton();
        jToggleButtonRectangulo = new javax.swing.JToggleButton();
        jToggleButtonOvalo = new javax.swing.JToggleButton();
        jToggleButtonEditar = new javax.swing.JToggleButton();
        jToggleButtonRoundRectangle = new javax.swing.JToggleButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jComboBoxColores = new javax.swing.JComboBox(colores);
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jSpinnerGrosor = new javax.swing.JSpinner();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jToggleButtonRelleno = new javax.swing.JToggleButton();
        jToggleButtonTransparencia = new javax.swing.JToggleButton();
        jToggleButtonAlisado = new javax.swing.JToggleButton();
        jPanelCentral = new javax.swing.JPanel();
        escritorio = new javax.swing.JDesktopPane();
        jPanelEstado = new javax.swing.JPanel();
        jLabelEstado = new javax.swing.JLabel();
        jLabelPosicion = new javax.swing.JLabel();
        jLabelRGB = new javax.swing.JLabel();
        jToolBarEdicion = new javax.swing.JToolBar();
        jPanelSeparador1 = new javax.swing.JPanel();
        jPanelBrillo = new javax.swing.JPanel();
        jLabelBrillo = new javax.swing.JLabel();
        jSliderBrillo = new javax.swing.JSlider();
        jPanelSeparador2 = new javax.swing.JPanel();
        jPanelFiltro = new javax.swing.JPanel();
        jLabelFiltro = new javax.swing.JLabel();
        jComboBoxFiltros = new javax.swing.JComboBox<>();
        jPanelSeparador3 = new javax.swing.JPanel();
        jPanelConstraste = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanelBotonesContraste = new javax.swing.JPanel();
        jButtonOscuridad = new javax.swing.JButton();
        jButtonSobreExpuesta = new javax.swing.JButton();
        jButtonNormal = new javax.swing.JButton();
        jPanelSeparador4 = new javax.swing.JPanel();
        jPanelOtros = new javax.swing.JPanel();
        jLabelOtros = new javax.swing.JLabel();
        jPanelBotonesOtros = new javax.swing.JPanel();
        jButtonSeno = new javax.swing.JButton();
        jButtonSepia = new javax.swing.JButton();
        jButtonTintado = new javax.swing.JButton();
        jButtonEcualizacion = new javax.swing.JButton();
        jPanelSeparador5 = new javax.swing.JPanel();
        jPanelColor = new javax.swing.JPanel();
        jLabelColor = new javax.swing.JLabel();
        jPanelBotonesColor = new javax.swing.JPanel();
        jButtonColor = new javax.swing.JButton();
        jComboBoxEspacioColor = new javax.swing.JComboBox<>();
        jPanelSeparador6 = new javax.swing.JPanel();
        jPanelOpcionesRotacion = new javax.swing.JPanel();
        jLabelRotacion = new javax.swing.JLabel();
        jPanelBotonesRotacion = new javax.swing.JPanel();
        jSliderRotacion = new javax.swing.JSlider();
        jSeparator5 = new javax.swing.JSeparator();
        jButtonRotacion90 = new javax.swing.JButton();
        jButtonRotacion180 = new javax.swing.JButton();
        jButtonRotacion270 = new javax.swing.JButton();
        jPanelSeparador7 = new javax.swing.JPanel();
        jPanelEscala = new javax.swing.JPanel();
        jLabelEscala = new javax.swing.JLabel();
        jPanelBotonesEscala = new javax.swing.JPanel();
        jButtonAumentarEscala = new javax.swing.JButton();
        jButtonDisminuirEscala = new javax.swing.JButton();
        jPanelSeparador8 = new javax.swing.JPanel();
        jPanelUmbralizacion = new javax.swing.JPanel();
        jLabelUmbralizacion = new javax.swing.JLabel();
        jSliderUmbralizacion = new javax.swing.JSlider();
        jPanelSeparador9 = new javax.swing.JPanel();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuArchivo = new javax.swing.JMenu();
        jMenuEdicion = new javax.swing.JMenu();
        jMenuImagen = new javax.swing.JMenu();
        jCheckBoxMenuItemRescaleOp = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItemConvolve = new javax.swing.JCheckBoxMenuItem();
        jMenuItemNegativo = new javax.swing.JMenuItem();
        jMenuItemDuplicar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBarHerramientas.setDoubleBuffered(true);

        jButtonNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/nuevo.png"))); // NOI18N
        jButtonNuevo.setFocusable(false);
        jButtonNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });
        jToolBarHerramientas.add(jButtonNuevo);

        jButtonAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/abrir.png"))); // NOI18N
        jButtonAbrir.setFocusable(false);
        jButtonAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAbrirActionPerformed(evt);
            }
        });
        jToolBarHerramientas.add(jButtonAbrir);

        jButtonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/guardar.png"))); // NOI18N
        jButtonGuardar.setFocusable(false);
        jButtonGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });
        jToolBarHerramientas.add(jButtonGuardar);
        jToolBarHerramientas.add(jSeparator1);

        buttonGroup.add(jToggleButtonLapiz);
        jToggleButtonLapiz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/punto.png"))); // NOI18N
        jToggleButtonLapiz.setFocusable(false);
        jToggleButtonLapiz.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonLapiz.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonLapiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonLapizActionPerformed(evt);
            }
        });
        jToolBarHerramientas.add(jToggleButtonLapiz);

        buttonGroup.add(jToggleButtonLinea);
        jToggleButtonLinea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/linea.png"))); // NOI18N
        jToggleButtonLinea.setFocusable(false);
        jToggleButtonLinea.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonLinea.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonLineaActionPerformed(evt);
            }
        });
        jToolBarHerramientas.add(jToggleButtonLinea);

        buttonGroup.add(jToggleButtonRectangulo);
        jToggleButtonRectangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rectangulo.png"))); // NOI18N
        jToggleButtonRectangulo.setFocusable(false);
        jToggleButtonRectangulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonRectangulo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonRectangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonRectanguloActionPerformed(evt);
            }
        });
        jToolBarHerramientas.add(jToggleButtonRectangulo);

        buttonGroup.add(jToggleButtonOvalo);
        jToggleButtonOvalo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/elipse.png"))); // NOI18N
        jToggleButtonOvalo.setFocusable(false);
        jToggleButtonOvalo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonOvalo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonOvalo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonOvaloActionPerformed(evt);
            }
        });
        jToolBarHerramientas.add(jToggleButtonOvalo);

        buttonGroup.add(jToggleButtonEditar);
        jToggleButtonEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/seleccion.png"))); // NOI18N
        jToggleButtonEditar.setFocusable(false);
        jToggleButtonEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonEditarActionPerformed(evt);
            }
        });
        jToolBarHerramientas.add(jToggleButtonEditar);

        buttonGroup.add(jToggleButtonRoundRectangle);
        jToggleButtonRoundRectangle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rounded-rectangle.png"))); // NOI18N
        jToggleButtonRoundRectangle.setFocusable(false);
        jToggleButtonRoundRectangle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonRoundRectangle.setMaximumSize(new java.awt.Dimension(36, 36));
        jToggleButtonRoundRectangle.setMinimumSize(new java.awt.Dimension(36, 36));
        jToggleButtonRoundRectangle.setPreferredSize(new java.awt.Dimension(36, 36));
        jToggleButtonRoundRectangle.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonRoundRectangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonRoundRectangleActionPerformed(evt);
            }
        });
        jToolBarHerramientas.add(jToggleButtonRoundRectangle);
        jToolBarHerramientas.add(jSeparator2);

        jComboBoxColores.setToolTipText("Color");
        jComboBoxColores.setPreferredSize(null);
        jComboBoxColores.setRenderer(new sm.jbl.iu.ComboBoxColor());
        jComboBoxColores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxColoresActionPerformed(evt);
            }
        });
        jToolBarHerramientas.add(jComboBoxColores);
        jToolBarHerramientas.add(jSeparator3);

        jSpinnerGrosor.setPreferredSize(new java.awt.Dimension(42, 30));
        jSpinnerGrosor.setValue(1);
        jSpinnerGrosor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerGrosorStateChanged(evt);
            }
        });
        jToolBarHerramientas.add(jSpinnerGrosor);
        jToolBarHerramientas.add(jSeparator4);

        buttonGroupOpciones.add(jToggleButtonRelleno);
        jToggleButtonRelleno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rellenar.png"))); // NOI18N
        jToggleButtonRelleno.setFocusable(false);
        jToggleButtonRelleno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonRelleno.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonRelleno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonRellenoActionPerformed(evt);
            }
        });
        jToolBarHerramientas.add(jToggleButtonRelleno);

        buttonGroupOpciones.add(jToggleButtonTransparencia);
        jToggleButtonTransparencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/transparencia.png"))); // NOI18N
        jToggleButtonTransparencia.setFocusable(false);
        jToggleButtonTransparencia.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonTransparencia.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonTransparencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonTransparenciaActionPerformed(evt);
            }
        });
        jToolBarHerramientas.add(jToggleButtonTransparencia);

        buttonGroupOpciones.add(jToggleButtonAlisado);
        jToggleButtonAlisado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/alisar.png"))); // NOI18N
        jToggleButtonAlisado.setFocusable(false);
        jToggleButtonAlisado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonAlisado.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonAlisado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonAlisadoActionPerformed(evt);
            }
        });
        jToolBarHerramientas.add(jToggleButtonAlisado);

        getContentPane().add(jToolBarHerramientas, java.awt.BorderLayout.PAGE_START);

        jPanelCentral.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1518, Short.MAX_VALUE)
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanelCentral.add(escritorio, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanelCentral, java.awt.BorderLayout.CENTER);

        jPanelEstado.setLayout(new java.awt.BorderLayout());

        jLabelEstado.setText("Lápiz");
        jPanelEstado.add(jLabelEstado, java.awt.BorderLayout.WEST);

        jLabelPosicion.setText("[x,y]");
        jPanelEstado.add(jLabelPosicion, java.awt.BorderLayout.EAST);

        jLabelRGB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelRGB.setToolTipText("");
        jLabelRGB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanelEstado.add(jLabelRGB, java.awt.BorderLayout.CENTER);

        jToolBarEdicion.setRollover(true);

        jPanelSeparador1.setMaximumSize(new java.awt.Dimension(50, 100));
        jPanelSeparador1.setPreferredSize(new java.awt.Dimension(50, 100));

        javax.swing.GroupLayout jPanelSeparador1Layout = new javax.swing.GroupLayout(jPanelSeparador1);
        jPanelSeparador1.setLayout(jPanelSeparador1Layout);
        jPanelSeparador1Layout.setHorizontalGroup(
            jPanelSeparador1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 31, Short.MAX_VALUE)
        );
        jPanelSeparador1Layout.setVerticalGroup(
            jPanelSeparador1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jToolBarEdicion.add(jPanelSeparador1);

        jPanelBrillo.setMaximumSize(new java.awt.Dimension(350, 150));
        jPanelBrillo.setPreferredSize(new java.awt.Dimension(300, 100));
        jPanelBrillo.setLayout(new java.awt.GridLayout(0, 1));

        jLabelBrillo.setText("Brillo");
        jLabelBrillo.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabelBrillo.setMaximumSize(new java.awt.Dimension(35, 20));
        jLabelBrillo.setMinimumSize(new java.awt.Dimension(25, 10));
        jLabelBrillo.setPreferredSize(new java.awt.Dimension(30, 15));
        jLabelBrillo.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jPanelBrillo.add(jLabelBrillo);

        jSliderBrillo.setMaximum(255);
        jSliderBrillo.setMinimum(-255);
        jSliderBrillo.setValue(0);
        jSliderBrillo.setPreferredSize(new java.awt.Dimension(80, 16));
        jSliderBrillo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderBrilloStateChanged(evt);
            }
        });
        jSliderBrillo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jSliderBrilloFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jSliderBrilloFocusLost(evt);
            }
        });
        jPanelBrillo.add(jSliderBrillo);

        jToolBarEdicion.add(jPanelBrillo);

        jPanelSeparador2.setMaximumSize(new java.awt.Dimension(50, 100));
        jPanelSeparador2.setPreferredSize(new java.awt.Dimension(50, 100));

        javax.swing.GroupLayout jPanelSeparador2Layout = new javax.swing.GroupLayout(jPanelSeparador2);
        jPanelSeparador2.setLayout(jPanelSeparador2Layout);
        jPanelSeparador2Layout.setHorizontalGroup(
            jPanelSeparador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 31, Short.MAX_VALUE)
        );
        jPanelSeparador2Layout.setVerticalGroup(
            jPanelSeparador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jToolBarEdicion.add(jPanelSeparador2);

        jPanelFiltro.setMaximumSize(new java.awt.Dimension(150, 100));
        jPanelFiltro.setMinimumSize(new java.awt.Dimension(20, 100));
        jPanelFiltro.setPreferredSize(new java.awt.Dimension(100, 100));
        jPanelFiltro.setLayout(new java.awt.GridLayout(0, 1));

        jLabelFiltro.setText("Filtro");
        jLabelFiltro.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanelFiltro.add(jLabelFiltro);

        jComboBoxFiltros.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Media", "Binomial", "Enfoque", "Relieve", "Laplaciano", "5x5", "7x7" }));
        jComboBoxFiltros.setMaximumSize(new java.awt.Dimension(30, 30));
        jComboBoxFiltros.setMinimumSize(new java.awt.Dimension(30, 30));
        jComboBoxFiltros.setPreferredSize(new java.awt.Dimension(30, 30));
        jComboBoxFiltros.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBoxFiltrosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBoxFiltrosFocusLost(evt);
            }
        });
        jComboBoxFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxFiltrosActionPerformed(evt);
            }
        });
        jPanelFiltro.add(jComboBoxFiltros);

        jToolBarEdicion.add(jPanelFiltro);

        jPanelSeparador3.setMaximumSize(new java.awt.Dimension(50, 100));
        jPanelSeparador3.setPreferredSize(new java.awt.Dimension(50, 100));

        javax.swing.GroupLayout jPanelSeparador3Layout = new javax.swing.GroupLayout(jPanelSeparador3);
        jPanelSeparador3.setLayout(jPanelSeparador3Layout);
        jPanelSeparador3Layout.setHorizontalGroup(
            jPanelSeparador3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 31, Short.MAX_VALUE)
        );
        jPanelSeparador3Layout.setVerticalGroup(
            jPanelSeparador3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jToolBarEdicion.add(jPanelSeparador3);

        jPanelConstraste.setMaximumSize(new java.awt.Dimension(200, 100));
        jPanelConstraste.setMinimumSize(new java.awt.Dimension(100, 80));
        jPanelConstraste.setPreferredSize(new java.awt.Dimension(150, 100));
        jPanelConstraste.setLayout(new java.awt.GridLayout(0, 1));

        jLabel1.setText("Contraste");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanelConstraste.add(jLabel1);

        jPanelBotonesContraste.setLayout(new java.awt.GridLayout(1, 0));

        jButtonOscuridad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/iluminar.png"))); // NOI18N
        jButtonOscuridad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOscuridadActionPerformed(evt);
            }
        });
        jPanelBotonesContraste.add(jButtonOscuridad);

        jButtonSobreExpuesta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/oscurecer.png"))); // NOI18N
        jButtonSobreExpuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSobreExpuestaActionPerformed(evt);
            }
        });
        jPanelBotonesContraste.add(jButtonSobreExpuesta);

        jButtonNormal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/contraste.png"))); // NOI18N
        jButtonNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNormalActionPerformed(evt);
            }
        });
        jPanelBotonesContraste.add(jButtonNormal);

        jPanelConstraste.add(jPanelBotonesContraste);

        jToolBarEdicion.add(jPanelConstraste);

        jPanelSeparador4.setMaximumSize(new java.awt.Dimension(50, 100));
        jPanelSeparador4.setPreferredSize(new java.awt.Dimension(50, 100));

        javax.swing.GroupLayout jPanelSeparador4Layout = new javax.swing.GroupLayout(jPanelSeparador4);
        jPanelSeparador4.setLayout(jPanelSeparador4Layout);
        jPanelSeparador4Layout.setHorizontalGroup(
            jPanelSeparador4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 31, Short.MAX_VALUE)
        );
        jPanelSeparador4Layout.setVerticalGroup(
            jPanelSeparador4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jToolBarEdicion.add(jPanelSeparador4);

        jPanelOtros.setMaximumSize(new java.awt.Dimension(200, 100));
        jPanelOtros.setMinimumSize(new java.awt.Dimension(100, 82));
        jPanelOtros.setPreferredSize(new java.awt.Dimension(200, 100));
        jPanelOtros.setLayout(new java.awt.GridLayout(0, 1));

        jLabelOtros.setText("Otros");
        jLabelOtros.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanelOtros.add(jLabelOtros);

        jPanelBotonesOtros.setLayout(new java.awt.GridLayout(1, 0));

        jButtonSeno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/sinusoidal.png"))); // NOI18N
        jButtonSeno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSenoActionPerformed(evt);
            }
        });
        jPanelBotonesOtros.add(jButtonSeno);

        jButtonSepia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/sepia.png"))); // NOI18N
        jButtonSepia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSepiaActionPerformed(evt);
            }
        });
        jPanelBotonesOtros.add(jButtonSepia);

        jButtonTintado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/tintar.png"))); // NOI18N
        jButtonTintado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTintadoActionPerformed(evt);
            }
        });
        jPanelBotonesOtros.add(jButtonTintado);

        jButtonEcualizacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/ecualizar.png"))); // NOI18N
        jButtonEcualizacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEcualizacionActionPerformed(evt);
            }
        });
        jPanelBotonesOtros.add(jButtonEcualizacion);

        jPanelOtros.add(jPanelBotonesOtros);

        jToolBarEdicion.add(jPanelOtros);

        jPanelSeparador5.setMaximumSize(new java.awt.Dimension(50, 100));
        jPanelSeparador5.setPreferredSize(new java.awt.Dimension(50, 100));

        javax.swing.GroupLayout jPanelSeparador5Layout = new javax.swing.GroupLayout(jPanelSeparador5);
        jPanelSeparador5.setLayout(jPanelSeparador5Layout);
        jPanelSeparador5Layout.setHorizontalGroup(
            jPanelSeparador5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 31, Short.MAX_VALUE)
        );
        jPanelSeparador5Layout.setVerticalGroup(
            jPanelSeparador5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jToolBarEdicion.add(jPanelSeparador5);

        jPanelColor.setMaximumSize(new java.awt.Dimension(200, 100));
        jPanelColor.setPreferredSize(new java.awt.Dimension(150, 100));
        jPanelColor.setLayout(new java.awt.GridLayout(0, 1));

        jLabelColor.setText("Color");
        jLabelColor.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanelColor.add(jLabelColor);

        jPanelBotonesColor.setLayout(new java.awt.GridLayout(1, 0));

        jButtonColor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/bandas.png"))); // NOI18N
        jButtonColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonColorActionPerformed(evt);
            }
        });
        jPanelBotonesColor.add(jButtonColor);

        jComboBoxEspacioColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RGB", "YCC", "GREY" }));
        jComboBoxEspacioColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEspacioColorActionPerformed(evt);
            }
        });
        jPanelBotonesColor.add(jComboBoxEspacioColor);

        jPanelColor.add(jPanelBotonesColor);

        jToolBarEdicion.add(jPanelColor);

        jPanelSeparador6.setMaximumSize(new java.awt.Dimension(50, 100));
        jPanelSeparador6.setPreferredSize(new java.awt.Dimension(50, 100));

        javax.swing.GroupLayout jPanelSeparador6Layout = new javax.swing.GroupLayout(jPanelSeparador6);
        jPanelSeparador6.setLayout(jPanelSeparador6Layout);
        jPanelSeparador6Layout.setHorizontalGroup(
            jPanelSeparador6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 31, Short.MAX_VALUE)
        );
        jPanelSeparador6Layout.setVerticalGroup(
            jPanelSeparador6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jToolBarEdicion.add(jPanelSeparador6);

        jPanelOpcionesRotacion.setMaximumSize(new java.awt.Dimension(500, 100));
        jPanelOpcionesRotacion.setMinimumSize(new java.awt.Dimension(90, 80));
        jPanelOpcionesRotacion.setPreferredSize(new java.awt.Dimension(300, 100));
        jPanelOpcionesRotacion.setLayout(new java.awt.GridLayout(0, 1));

        jLabelRotacion.setText("Rotacion");
        jLabelRotacion.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanelOpcionesRotacion.add(jLabelRotacion);

        jPanelBotonesRotacion.setLayout(new java.awt.GridLayout(1, 0));

        jSliderRotacion.setMajorTickSpacing(5);
        jSliderRotacion.setMaximum(180);
        jSliderRotacion.setMinimum(-180);
        jSliderRotacion.setMinorTickSpacing(5);
        jSliderRotacion.setPaintTicks(true);
        jSliderRotacion.setValue(0);
        jSliderRotacion.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSliderRotacion.setPreferredSize(new java.awt.Dimension(300, 27));
        jSliderRotacion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderRotacionStateChanged(evt);
            }
        });
        jSliderRotacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jSliderRotacionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jSliderRotacionFocusLost(evt);
            }
        });
        jPanelBotonesRotacion.add(jSliderRotacion);
        jPanelBotonesRotacion.add(jSeparator5);

        jButtonRotacion90.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rotacion90.png"))); // NOI18N
        jButtonRotacion90.setPreferredSize(new java.awt.Dimension(50, 25));
        jButtonRotacion90.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRotacion90ActionPerformed(evt);
            }
        });
        jPanelBotonesRotacion.add(jButtonRotacion90);

        jButtonRotacion180.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rotacion180.png"))); // NOI18N
        jButtonRotacion180.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRotacion180ActionPerformed(evt);
            }
        });
        jPanelBotonesRotacion.add(jButtonRotacion180);

        jButtonRotacion270.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rotacion270.png"))); // NOI18N
        jButtonRotacion270.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRotacion270ActionPerformed(evt);
            }
        });
        jPanelBotonesRotacion.add(jButtonRotacion270);

        jPanelOpcionesRotacion.add(jPanelBotonesRotacion);

        jToolBarEdicion.add(jPanelOpcionesRotacion);

        jPanelSeparador7.setMaximumSize(new java.awt.Dimension(50, 100));
        jPanelSeparador7.setPreferredSize(new java.awt.Dimension(50, 100));

        javax.swing.GroupLayout jPanelSeparador7Layout = new javax.swing.GroupLayout(jPanelSeparador7);
        jPanelSeparador7.setLayout(jPanelSeparador7Layout);
        jPanelSeparador7Layout.setHorizontalGroup(
            jPanelSeparador7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 31, Short.MAX_VALUE)
        );
        jPanelSeparador7Layout.setVerticalGroup(
            jPanelSeparador7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jToolBarEdicion.add(jPanelSeparador7);

        jPanelEscala.setMaximumSize(new java.awt.Dimension(150, 100));
        jPanelEscala.setMinimumSize(new java.awt.Dimension(90, 80));
        jPanelEscala.setPreferredSize(new java.awt.Dimension(100, 100));
        jPanelEscala.setLayout(new java.awt.GridLayout(0, 1));

        jLabelEscala.setText("Escala");
        jLabelEscala.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanelEscala.add(jLabelEscala);

        jPanelBotonesEscala.setLayout(new java.awt.GridLayout(1, 0));

        jButtonAumentarEscala.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/aumentar.png"))); // NOI18N
        jButtonAumentarEscala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAumentarEscalaActionPerformed(evt);
            }
        });
        jPanelBotonesEscala.add(jButtonAumentarEscala);

        jButtonDisminuirEscala.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/disminuir.png"))); // NOI18N
        jButtonDisminuirEscala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDisminuirEscalaActionPerformed(evt);
            }
        });
        jPanelBotonesEscala.add(jButtonDisminuirEscala);

        jPanelEscala.add(jPanelBotonesEscala);

        jToolBarEdicion.add(jPanelEscala);

        jPanelSeparador8.setMaximumSize(new java.awt.Dimension(50, 100));
        jPanelSeparador8.setPreferredSize(new java.awt.Dimension(50, 100));

        javax.swing.GroupLayout jPanelSeparador8Layout = new javax.swing.GroupLayout(jPanelSeparador8);
        jPanelSeparador8.setLayout(jPanelSeparador8Layout);
        jPanelSeparador8Layout.setHorizontalGroup(
            jPanelSeparador8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 31, Short.MAX_VALUE)
        );
        jPanelSeparador8Layout.setVerticalGroup(
            jPanelSeparador8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jToolBarEdicion.add(jPanelSeparador8);

        jPanelUmbralizacion.setMaximumSize(new java.awt.Dimension(150, 100));
        jPanelUmbralizacion.setMinimumSize(new java.awt.Dimension(90, 80));
        jPanelUmbralizacion.setPreferredSize(new java.awt.Dimension(100, 100));
        jPanelUmbralizacion.setLayout(new java.awt.GridLayout(0, 1));

        jLabelUmbralizacion.setText("Umbralizacion");
        jLabelUmbralizacion.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanelUmbralizacion.add(jLabelUmbralizacion);

        jSliderUmbralizacion.setMaximum(255);
        jSliderUmbralizacion.setValue(127);
        jSliderUmbralizacion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderUmbralizacionStateChanged(evt);
            }
        });
        jSliderUmbralizacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jSliderUmbralizacionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jSliderUmbralizacionFocusLost(evt);
            }
        });
        jPanelUmbralizacion.add(jSliderUmbralizacion);

        jToolBarEdicion.add(jPanelUmbralizacion);

        jPanelSeparador9.setMaximumSize(new java.awt.Dimension(200, 100));
        jPanelSeparador9.setPreferredSize(new java.awt.Dimension(200, 100));

        javax.swing.GroupLayout jPanelSeparador9Layout = new javax.swing.GroupLayout(jPanelSeparador9);
        jPanelSeparador9.setLayout(jPanelSeparador9Layout);
        jPanelSeparador9Layout.setHorizontalGroup(
            jPanelSeparador9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );
        jPanelSeparador9Layout.setVerticalGroup(
            jPanelSeparador9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jToolBarEdicion.add(jPanelSeparador9);

        jPanelEstado.add(jToolBarEdicion, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanelEstado, java.awt.BorderLayout.PAGE_END);

        jMenuArchivo.setText("Archivo");
        jMenuBar.add(jMenuArchivo);

        jMenuEdicion.setText("Edición");
        jMenuBar.add(jMenuEdicion);

        jMenuImagen.setText("Imagen");

        jCheckBoxMenuItemRescaleOp.setText("Reescalar");
        jCheckBoxMenuItemRescaleOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemRescaleOpActionPerformed(evt);
            }
        });
        jMenuImagen.add(jCheckBoxMenuItemRescaleOp);

        jCheckBoxMenuItemConvolve.setText("Convolve");
        jCheckBoxMenuItemConvolve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemConvolveActionPerformed(evt);
            }
        });
        jMenuImagen.add(jCheckBoxMenuItemConvolve);

        jMenuItemNegativo.setText("Negativo");
        jMenuItemNegativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNegativoActionPerformed(evt);
            }
        });
        jMenuImagen.add(jMenuItemNegativo);

        jMenuItemDuplicar.setText("Duplicar");
        jMenuItemDuplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDuplicarActionPerformed(evt);
            }
        });
        jMenuImagen.add(jMenuItemDuplicar);

        jMenuBar.add(jMenuImagen);

        setJMenuBar(jMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void jToggleButtonLapizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonLapizActionPerformed
        VentanaInterna vi = (VentanaInterna)escritorio.getSelectedFrame();
        if(vi != null){
            vi.getLienzo().setEditar(false);
            vi.getLienzo().setHerramienta(Herramientas.LAPIZ);
            jLabelEstado.setText("Lápiz");
        }        
    }//GEN-LAST:event_jToggleButtonLapizActionPerformed

    private void jToggleButtonLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonLineaActionPerformed
        VentanaInterna vi = (VentanaInterna)escritorio.getSelectedFrame();
        if(vi != null){
            vi.getLienzo().setEditar(false);
            vi.getLienzo().setHerramienta(Herramientas.LINEA);
            jLabelEstado.setText("Línea");
        }
    }//GEN-LAST:event_jToggleButtonLineaActionPerformed

    private void jToggleButtonRectanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonRectanguloActionPerformed
        VentanaInterna vi = (VentanaInterna)escritorio.getSelectedFrame();
        if(vi != null){
            vi.getLienzo().setEditar(false);
            vi.getLienzo().setHerramienta(Herramientas.RECTANGULO);
            jLabelEstado.setText("Rectángulo");
        }
    }//GEN-LAST:event_jToggleButtonRectanguloActionPerformed

    private void jToggleButtonOvaloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonOvaloActionPerformed
        VentanaInterna vi = (VentanaInterna)escritorio.getSelectedFrame();
        if(vi != null){
            vi.getLienzo().setEditar(false);
            vi.getLienzo().setHerramienta(Herramientas.CIRCULO);
            jLabelEstado.setText("Círculo");
        }
    }//GEN-LAST:event_jToggleButtonOvaloActionPerformed

    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
        VentanaInterna vi = new VentanaInterna(this);
        escritorio.add(vi);
        try {
            vi.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        jLabelEstado.setText("Lápiz");
        jToggleButtonLapiz.setSelected(true);
        vi.setVisible(true);
        BufferedImage img;
        img = new BufferedImage(300,300,BufferedImage.TYPE_INT_ARGB);
        vi.getLienzo().setImage(img);
    }//GEN-LAST:event_jButtonNuevoActionPerformed

    private void jButtonAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAbrirActionPerformed
        JFileChooser dlg = new JFileChooser();
        dlg.setFileSelectionMode(JFileChooser.FILES_ONLY);
        dlg.addChoosableFileFilter(new FileNameExtensionFilter("JPG","jpg"));
        dlg.addChoosableFileFilter(new FileNameExtensionFilter("PNG","PNG"));
        //FileFilter filter = new FileNameExtensionFilter("jpg, png, tiff, bmp ...", ImageIO.getReaderFileSuffixes());
        //dlg.addChoosableFileFilter(filter);
        //dlg.setFileFilter(filter);
        dlg.setAcceptAllFileFilterUsed(true);
        int resp = dlg.showOpenDialog(this);
        if( resp == JFileChooser.APPROVE_OPTION) {
            try{
                File f = dlg.getSelectedFile();
                BufferedImage img = ImageIO.read(f);
                //imgSource = new BufferedImage(img.getWidth(),img.getHeight(),BufferedImage.TYPE_INT_ARGB);
                VentanaInterna vi = new VentanaInterna(this);
                //Redimensionado de la ventana  
                vi.setSize(img.getWidth(), img.getHeight());
                vi.getLienzo().setFondo(false);
                vi.getLienzo().setImage(img);
                this.escritorio.add(vi);
                vi.setTitle(f.getName());
                String extension=f.getName();
                int indicePunto = extension.lastIndexOf(".");
                extension=extension.substring(indicePunto+1);
                vi.getLienzo().setExtension(extension);
                System.out.println("Extension para abrir: " + vi.getLienzo().getExtension());
                vi.setVisible(true);
            }catch(IOException ex){
                //JOptionPane.showMessageDialog(null, "alert", "alert", JOptionPane.ERROR_MESSAGE);
                JOptionPane.showMessageDialog(this,"La imagen está dañada o no se reconoce", "error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonAbrirActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        VentanaInterna vi=(VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            JFileChooser dlg = new JFileChooser();
            FileFilter jpg = new FileNameExtensionFilter("JPG", "jpg", "jpeg");
            FileFilter png = new FileNameExtensionFilter("PNG", "png");
            System.out.println("Extension para guardar: " + vi.getLienzo().getExtension());
           
            if(vi.getLienzo().getImage().getType()!=BufferedImage.TYPE_INT_ARGB){
                dlg.addChoosableFileFilter(jpg);
            }else{
                dlg.addChoosableFileFilter(png);
            }           
            
            dlg.setAcceptAllFileFilterUsed(true);
            int resp = dlg.showSaveDialog(this);
            if (resp == JFileChooser.APPROVE_OPTION) {
                try {
                    BufferedImage img = vi.getLienzo().getImage(true);
                    if (img != null) {
                        File f = dlg.getSelectedFile();
                        if (dlg.getFileFilter().equals(jpg)){ 
                            ImageIO.write(img, "jpg", f);
                        } else if (dlg.getFileFilter().equals(png)) {
                            ImageIO.write(img, "png", f);
                        }
                        else{
                            ImageIO.write(img, "jpg", f);
                        }
                        
                        vi.setTitle(f.getName());
                    }
                }catch (Exception ex) {
                    JOptionPane.showMessageDialog(this,"Error al guardar la imagen", "error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jToggleButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonEditarActionPerformed
        VentanaInterna vi = (VentanaInterna)escritorio.getSelectedFrame();
        if (vi != null) vi.getLienzo().setEditar(jToggleButtonEditar.isSelected());
    }//GEN-LAST:event_jToggleButtonEditarActionPerformed

    private void jSpinnerGrosorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerGrosorStateChanged
        VentanaInterna vi = (VentanaInterna)escritorio.getSelectedFrame();
        if(vi != null){
            Figura f = vi.getLienzo().getFigura();
            if(f!=null && vi.getLienzo().getEditar()) f.setStroke((int) jSpinnerGrosor.getValue());
        }
        vi.getLienzo().repaint();
    }//GEN-LAST:event_jSpinnerGrosorStateChanged

    private void jComboBoxColoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxColoresActionPerformed
        java.awt.Color c = (java.awt.Color)jComboBoxColores.getSelectedItem();
        VentanaInterna vi = (VentanaInterna)escritorio.getSelectedFrame();
        if(vi != null) vi.getLienzo().setColor(c);
        repaint();
    }//GEN-LAST:event_jComboBoxColoresActionPerformed

    private void jCheckBoxMenuItemRescaleOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemRescaleOpActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            if(imgSource!=null){
                try{
                    RescaleOp rop = new RescaleOp(1.0F, 100.0F, null);
                    rop.filter(imgSource, imgSource);
                    vi.getLienzo().repaint();
                } catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_jCheckBoxMenuItemRescaleOpActionPerformed

    private void jCheckBoxMenuItemConvolveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemConvolveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxMenuItemConvolveActionPerformed

    private void jSliderBrilloStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderBrilloStateChanged
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null && vi.getLienzo().getExtension()!=null) {
            //imgSource = vi.getLienzo().getImage();
            //Componente Alpha
            
            if(imgSource != null && jSliderBrillo.hasFocus()){
                RescaleOp rop=null;
                float brillo= (float) 1.0f + this.jSliderBrillo.getValue()/255.0f;
                float transparencia = (float) Math.abs(brillo/255.f - 1.0f);
                
                vi.getLienzo().convertImageType(BufferedImage.TYPE_INT_ARGB);
                imgSource=convertImageType(imgSource,BufferedImage.TYPE_INT_ARGB);
                float[] scaleFactor = {brillo, brillo, brillo, transparencia};
                float[] offsets = {0f, 0f, 0f, 0f};
                rop = new RescaleOp(scaleFactor,offsets, null);
                
                //System.out.println("Tipo imgSource: " + imgSource.getType() +"\nTipo imgagen lienzo: " + vi.getLienzo().getImage().getType() );
                
                rop.filter(imgSource, vi.getLienzo().getImage(false));
                //Se puede recuperar el tipo original, aquí pero me parece más lógico cambiarlo al guardar
                //vi.getLienzo().convertImageType(BufferedImage.TYPE_INT_RGB);
                this.escritorio.repaint();
            }
        }
    }//GEN-LAST:event_jSliderBrilloStateChanged
    
    BufferedImage convertImageType(BufferedImage img, int type){
        if(img==null) return null;
        BufferedImage imOut = new BufferedImage(img.getWidth(),
        img.getHeight(), type);
        Graphics2D g2d = imOut.createGraphics();
        g2d.drawImage(img,0,0,null);
        return imOut;
    }
    
    
    private void jSliderBrilloFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSliderBrilloFocusGained
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
        if(vi!=null){
            ColorModel cm = vi.getLienzo().getImage().getColorModel();
            WritableRaster raster = vi.getLienzo().getImage().copyData(null);
            boolean alfaPre = vi.getLienzo().getImage().isAlphaPremultiplied();
            imgSource = new BufferedImage(cm,raster,alfaPre,null);
        }
    }//GEN-LAST:event_jSliderBrilloFocusGained

    private void jSliderBrilloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSliderBrilloFocusLost
        imgSource = null;
        this.jSliderBrillo.setValue(0);
        this.escritorio.repaint();
    }//GEN-LAST:event_jSliderBrilloFocusLost

    private void jComboBoxFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxFiltrosActionPerformed
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
        if(vi!=null){
            Kernel k = null;
            ConvolveOp cop = null;
            switch(jComboBoxFiltros.getSelectedIndex()){
                //Media
                case 0:
                    k = KernelProducer.createKernel(KernelProducer.TYPE_MEDIA_3x3);
                    break;
                //Binomial
                case 1:
                    k = KernelProducer.createKernel(KernelProducer.TYPE_BINOMIAL_3x3);
                    break;
                //Enfoque
                case 2:
                    k = KernelProducer.createKernel(KernelProducer.TYPE_ENFOQUE_3x3);
                    break;
                //Relieve
                case 3:
                    k = KernelProducer.createKernel(KernelProducer.TYPE_RELIEVE_3x3);
                    break;
                //Laplaciano
                case 4:
                    k = KernelProducer.createKernel(KernelProducer.TYPE_LAPLACIANA_3x3);
                    break;
                //Emborronamiento media 5x5
                case 5:
                    float filtroMedia5x5[] = new float[25];
                    for (int i = 0; i < 25; i++) filtroMedia5x5[i] = 1.0f / 25.0f;
                    k = new Kernel(5,5,filtroMedia5x5);
                    break;
                //Emborronamiento media: 7x7
                case 6:
                    float filtroMedia7x7[] = new float[49];
                    for (int i = 0; i < 49; i++) filtroMedia7x7[i] = 1.0f / 49.0f;
                    k = new Kernel(5,5,filtroMedia7x7);
                    break;
            }
            cop = new ConvolveOp(k,ConvolveOp.EDGE_NO_OP,null);
            imgAux = cop.filter(imgSource, null);
            vi.getLienzo().setImage(imgAux);
            repaint();
        }
    }//GEN-LAST:event_jComboBoxFiltrosActionPerformed

    private void jComboBoxFiltrosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxFiltrosFocusLost
        imgSource = null;
        repaint();
    }//GEN-LAST:event_jComboBoxFiltrosFocusLost

    private void jComboBoxFiltrosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxFiltrosFocusGained
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
        if(vi!=null){
            ColorModel cm = vi.getLienzo().getImage().getColorModel();
            WritableRaster raster = vi.getLienzo().getImage().copyData(null);
            boolean alfaPre = vi.getLienzo().getImage().isAlphaPremultiplied();
            imgSource = new BufferedImage(cm,raster,alfaPre,null);
        }
    }//GEN-LAST:event_jComboBoxFiltrosFocusGained

    private void jToggleButtonRellenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonRellenoActionPerformed
        VentanaInterna vi = (VentanaInterna)escritorio.getSelectedFrame();
        if(vi != null){
            vi.getLienzo().setRellenar(jToggleButtonEditar.isSelected());
        }
    }//GEN-LAST:event_jToggleButtonRellenoActionPerformed

    private void jToggleButtonTransparenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonTransparenciaActionPerformed
        VentanaInterna vi = (VentanaInterna)escritorio.getSelectedFrame();
        if(vi != null){
            vi.getLienzo().setTransparentar(jToggleButtonEditar.isSelected());
        }    
    }//GEN-LAST:event_jToggleButtonTransparenciaActionPerformed

    private void jToggleButtonAlisadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonAlisadoActionPerformed
        VentanaInterna vi = (VentanaInterna)escritorio.getSelectedFrame();
        if(vi != null){
            vi.getLienzo().setAlisar(jToggleButtonEditar.isSelected());
        }
    }//GEN-LAST:event_jToggleButtonAlisadoActionPerformed

    private void jButtonNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNormalActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            imgSource=convertImageType(imgSource,BufferedImage.TYPE_INT_ARGB);
            if(imgSource!=null){
                try{
                    int type = LookupTableProducer.TYPE_SFUNCION;
                    LookupTable lt = LookupTableProducer.createLookupTable(type);
                    LookupOp lop = new LookupOp(lt, null);
                    // Imagen origen y destino iguales
                    imgAux = lop.filter(imgSource, null);
                    vi.getLienzo().setImage(imgAux);
                    vi.repaint();
                } catch(Exception e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_jButtonNormalActionPerformed

    private void jButtonDisminuirEscalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDisminuirEscalaActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgSource = vi.getLienzo().getImage();
            if(imgSource != null ){
                AffineTransform at = AffineTransform.getScaleInstance(0.75,0.75); 
                AffineTransformOp atop = new AffineTransformOp(at,AffineTransformOp.TYPE_BILINEAR);
                imgAux = atop.filter(imgSource,null);
                vi.getLienzo().setImage(imgAux);
                vi.repaint();
            }
        }
    }//GEN-LAST:event_jButtonDisminuirEscalaActionPerformed

    private void jButtonOscuridadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOscuridadActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            imgSource=convertImageType(imgSource,BufferedImage.TYPE_INT_ARGB);
            if(imgSource!=null){
                try{
                    int type = LookupTableProducer.TYPE_LOGARITHM;
                    LookupTable lt = LookupTableProducer.createLookupTable(type);
                    LookupOp lop = new LookupOp(lt, null);
                    // Imagen origen y destino iguales
                    imgAux = lop.filter(imgSource, null);
                    vi.getLienzo().setImage(imgAux);
                    vi.repaint();
                } catch(Exception e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_jButtonOscuridadActionPerformed

    private void jButtonSobreExpuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSobreExpuestaActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            imgSource=convertImageType(imgSource,BufferedImage.TYPE_INT_ARGB);
            if(imgSource!=null){
                try{
                    int type = LookupTableProducer.TYPE_POWER;
                    LookupTable lt = LookupTableProducer.createLookupTable(type);
                    LookupOp lop = new LookupOp(lt, null);
                    // Imagen origen y destino iguales
                    imgAux = lop.filter(imgSource, null);
                    vi.getLienzo().setImage(imgAux);
                    vi.repaint();
                } catch(Exception e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_jButtonSobreExpuestaActionPerformed

    private void jButtonSepiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSepiaActionPerformed
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
        if(vi!=null){
            BufferedImage imgSource = vi.getLienzo().getImage();
            if(imgSource != null){             
                SepiaOp sepia = new SepiaOp();
                sepia.filter(imgSource, imgSource);
            }
            else{
                System.out.println("No hay imagen o es nula");
            }
        }else{
            System.out.println("No hay ventana interna o es nula");
        }
        this.repaint();
    }//GEN-LAST:event_jButtonSepiaActionPerformed

    private void jButtonRotacion90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRotacion90ActionPerformed
        VentanaInterna vi = (VentanaInterna) this.escritorio.getSelectedFrame();
        if(vi!=null){
            BufferedImage imgSource = vi.getLienzo().getImage();
            vi.getLienzo().setExtension("PNG");
            imgSource=convertImageType(imgSource,BufferedImage.TYPE_INT_ARGB);
            if(imgSource!=null){
                try{
                    double r = Math.toRadians(90);
                    Point p = new Point(imgSource.getWidth()/2, imgSource.getHeight()/2);
                    AffineTransform at = AffineTransform.getRotateInstance(r,p.x,p.y);
                    AffineTransformOp atop;
                    atop = new AffineTransformOp(at,AffineTransformOp.TYPE_BILINEAR);
                    imgAux = atop.filter(imgSource, null);
                    vi.getLienzo().setImage(imgAux);
                    vi.repaint();
                } catch(Exception e){
                    System.err.println(e.getLocalizedMessage());
                }
            }   
        }       
    }//GEN-LAST:event_jButtonRotacion90ActionPerformed

    private void jButtonRotacion180ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRotacion180ActionPerformed
        VentanaInterna vi = (VentanaInterna) this.escritorio.getSelectedFrame();
        if(vi!=null){
            BufferedImage imgSource = vi.getLienzo().getImage();
            vi.getLienzo().setExtension("PNG");
            imgSource=convertImageType(imgSource,BufferedImage.TYPE_INT_ARGB);
            if(imgSource!=null){
                try{
                    double r = Math.toRadians(180);
                    Point p = new Point(imgSource.getWidth()/2, imgSource.getHeight()/2);
                    AffineTransform at = AffineTransform.getRotateInstance(r,p.x,p.y);
                    AffineTransformOp atop;
                    atop = new AffineTransformOp(at,AffineTransformOp.TYPE_BILINEAR);
                    imgAux = atop.filter(imgSource, null);
                    vi.getLienzo().setImage(imgAux);
                    vi.repaint();
                } catch(Exception e){
                    System.err.println(e.getLocalizedMessage());
                }
            }   
        }
    }//GEN-LAST:event_jButtonRotacion180ActionPerformed

    private void jButtonRotacion270ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRotacion270ActionPerformed
        VentanaInterna vi = (VentanaInterna) this.escritorio.getSelectedFrame();
        if(vi!=null){
            BufferedImage imgSource = vi.getLienzo().getImage();
            vi.getLienzo().setExtension("PNG");
            imgSource=convertImageType(imgSource,BufferedImage.TYPE_INT_ARGB);
            if(imgSource!=null){
                try{
                    double r = Math.toRadians(270);
                    Point p = new Point(imgSource.getWidth()/2, imgSource.getHeight()/2);
                    AffineTransform at = AffineTransform.getRotateInstance(r,p.x,p.y);
                    AffineTransformOp atop;
                    atop = new AffineTransformOp(at,AffineTransformOp.TYPE_BILINEAR);
                    imgAux = atop.filter(imgSource, null);
                    vi.getLienzo().setImage(imgAux);
                    vi.repaint();
                } catch(Exception e){
                    System.err.println(e.getLocalizedMessage());
                }
            }   
        }
    }//GEN-LAST:event_jButtonRotacion270ActionPerformed

    private void jSliderRotacionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSliderRotacionFocusGained
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
        if(vi!=null){
            ColorModel cm = vi.getLienzo().getImage().getColorModel();
            WritableRaster raster = vi.getLienzo().getImage().copyData(null);
            boolean alfaPre = vi.getLienzo().getImage().isAlphaPremultiplied();
            imgSource = new BufferedImage(cm,raster,alfaPre,null);
        }
    }//GEN-LAST:event_jSliderRotacionFocusGained

    private void jSliderRotacionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSliderRotacionFocusLost
        imgSource = null;
        this.jSliderRotacion.setValue(0);
        repaint();
    }//GEN-LAST:event_jSliderRotacionFocusLost

    private void jSliderRotacionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderRotacionStateChanged
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null && vi.getLienzo().getExtension()!=null) {
            if(imgSource != null && jSliderRotacion.hasFocus()){
                vi.getLienzo().setExtension("PNG");
                int rotacion = jSliderRotacion.getValue();
                double r = Math.toRadians(rotacion);
                Point p = new Point(imgSource.getWidth()/2, imgSource.getHeight()/2);
                AffineTransform at = AffineTransform.getRotateInstance(r,p.x,p.y);
                AffineTransformOp atop = new AffineTransformOp(at,AffineTransformOp.TYPE_BILINEAR);
                imgAux = atop.filter(imgSource, null);
                vi.getLienzo().setImage(imgAux);
                vi.repaint();             
            }
        }
    }//GEN-LAST:event_jSliderRotacionStateChanged

    private void jButtonAumentarEscalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAumentarEscalaActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgSource = vi.getLienzo().getImage();
            if(imgSource != null ){
                AffineTransform at = AffineTransform.getScaleInstance(1.25, 1.25); 
                AffineTransformOp atop = new AffineTransformOp(at,AffineTransformOp.TYPE_BILINEAR);
                imgAux = atop.filter(imgSource,null);
                vi.getLienzo().setImage(imgAux);
                vi.repaint();
            }
        }
    }//GEN-LAST:event_jButtonAumentarEscalaActionPerformed

    private void jMenuItemNegativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNegativoActionPerformed
        VentanaInterna vi = (VentanaInterna) this.escritorio.getSelectedFrame();
        if(vi!=null){
            BufferedImage imgSource = vi.getLienzo().getImage();
            imgSource=convertImageType(imgSource,BufferedImage.TYPE_INT_ARGB);
            if(imgSource!=null){
                try{
                    LookupTable lt = LookupTableProducer.negativeFuction();
                    LookupOp lop = new LookupOp(lt,null); 
                    vi.getLienzo().setImage(lop.filter(imgSource, null));
                    vi.repaint();
                } catch(Exception e){
                    System.err.println(e.getLocalizedMessage());
                }
            }   
        }
    }//GEN-LAST:event_jMenuItemNegativoActionPerformed

    private void jMenuItemDuplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDuplicarActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            if(vi.getLienzo().getImage()!=null){
                BufferedImage copia = vi.getLienzo().getImage(true);
                VentanaInterna nueva = new VentanaInterna(this);
                nueva.setSize(copia.getWidth(), copia.getHeight());
                //quitar parte blanca
                nueva.getLienzo().setFondo(false);
                nueva.setTitle(vi.getTitle()+"[DUPLICADA]");
                nueva.getLienzo().setImage(copia);
                this.escritorio.add(nueva);
                    nueva.setVisible(true);
            }
            
        }
    }//GEN-LAST:event_jMenuItemDuplicarActionPerformed

    private void jButtonSenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSenoActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            imgSource=convertImageType(imgSource,BufferedImage.TYPE_INT_ARGB);
            if(imgSource!=null){
                try{
                    LookupTable lt = seno(180.0f / 255.0f);
                    LookupOp lop = new LookupOp(lt, null);
                    // Imagen origen y destino iguales
                    imgAux = lop.filter(imgSource, null);
                    vi.getLienzo().setImage(imgAux);
                    vi.repaint();
                } catch(Exception e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_jButtonSenoActionPerformed

    private void jButtonColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonColorActionPerformed
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage src = vi.getLienzo().getImage();
            convertImageType(src,BufferedImage.TYPE_INT_ARGB);
            if(src != null){
                ColorSpace cs = new sm.image.color.GreyColorSpace();
                
                ComponentColorModel cm = new ComponentColorModel(cs, false, false,
                                                                    Transparency.OPAQUE, DataBuffer.TYPE_BYTE);
                
                for(int iBanda=0; iBanda < src.getRaster().getNumBands(); iBanda++){
                    int listaBandas[] = {iBanda}; 
                    WritableRaster bandRaster = (WritableRaster)src.getRaster().createWritableChild(0,0,
                                                    src.getWidth(), src.getHeight(), 0, 0, listaBandas);
                    BufferedImage imgBanda = new BufferedImage(cm, bandRaster, false, null);
                    VentanaInterna nueva = new VentanaInterna(this);
                    nueva.setSize(imgBanda.getWidth(), imgBanda.getHeight());
                    //quitar parte blanca
                    nueva.getLienzo().setFondo(false);
                    nueva.setTitle(vi.getTitle()+"[ " + iBanda + "]");
                    nueva.getLienzo().setImage(imgBanda);
                    this.escritorio.add(nueva);
                    nueva.setVisible(true);
                }
                this.escritorio.repaint();     
            }
        }
    }//GEN-LAST:event_jButtonColorActionPerformed

    private void jComboBoxEspacioColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEspacioColorActionPerformed
       VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
        if(vi!=null){
            BufferedImage imgSrc = vi.getLienzo().getImage();
            if(imgSrc != null){
                VentanaInterna nueva = new VentanaInterna(this);
                nueva.getLienzo().setFondo(false);
            
                switch(jComboBoxEspacioColor.getSelectedIndex()){
                    case 0:
                        if (!imgSrc.getColorModel().getColorSpace().isCS_sRGB()) {
                            ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_sRGB);
                            ColorConvertOp cop = new ColorConvertOp(cs, null);
                            imgAux = cop.filter(imgSource, null);                           
                            nueva.setTitle(vi.getTitle() + "[RGB]");
                            nueva.setVisible(true);
                            nueva.getLienzo().setImage(imgAux);
                            escritorio.add(nueva);
                        }
                        break;
                    case 1:
                        if (imgSrc.getColorModel().getColorSpace().isCS_sRGB() || imgSrc.getRaster().getNumBands() == 1) {
                            ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_PYCC);
                            ColorConvertOp cop = new ColorConvertOp(cs, null);
                            imgAux = cop.filter(imgSrc, null);
                            nueva.setTitle(vi.getTitle() + "[YCC]");
                            nueva.setVisible(true);
                            nueva.getLienzo().setImage(imgAux);
                            escritorio.add(nueva);
                        }
                        break;
                    case 2:
                        if (imgSrc.getRaster().getNumBands()!= 1) {
                            ColorSpace cs = new sm.image.color.GreyColorSpace();
                            ColorConvertOp cop = new ColorConvertOp(cs, null);
                            imgAux = cop.filter(imgSrc, null);
                            nueva.setTitle(vi.getName() + "[GREY]" );
                            nueva.getLienzo().setImage(imgAux);
                            nueva.setVisible(true);
                            escritorio.add(nueva);
                        }
                        break;
                }
            }
        }
    }//GEN-LAST:event_jComboBoxEspacioColorActionPerformed

    private void jButtonTintadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTintadoActionPerformed
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
        if(vi!=null){
            BufferedImage imgSource = vi.getLienzo().getImage();
            if(imgSource != null){   
                Color c = (java.awt.Color)jComboBoxColores.getSelectedItem();
                TintOp tintado = new TintOp(c,0.5f);
                tintado.filter(imgSource, imgSource);
            }
            else{
                System.out.println("No hay imagen o es nula");
            }
        }else{
            System.out.println("No hay ventana interna o es nula");
        }
        this.repaint();
    }//GEN-LAST:event_jButtonTintadoActionPerformed

    private void jButtonEcualizacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEcualizacionActionPerformed
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
        if(vi!=null){
            BufferedImage imgSource = vi.getLienzo().getImage();
            if(imgSource != null){             
                EqualizationOp ecualizacion = new EqualizationOp();
                ecualizacion.filter(imgSource, imgSource);
            }
            else{
                System.out.println("No hay imagen o es nula");
            }
        }else{
            System.out.println("No hay ventana interna o es nula");
        }
    }//GEN-LAST:event_jButtonEcualizacionActionPerformed

    private void jToggleButtonRoundRectangleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonRoundRectangleActionPerformed
        VentanaInterna vi = (VentanaInterna)escritorio.getSelectedFrame();
        if(vi != null){
            vi.getLienzo().setEditar(false);
            vi.getLienzo().setHerramienta(Herramientas.RECTANGULO_REDONDEADO);
            jLabelEstado.setText("Rectángulo redondeado");
        }
    }//GEN-LAST:event_jToggleButtonRoundRectangleActionPerformed

    private void jSliderUmbralizacionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderUmbralizacionStateChanged

        if(vi!=null){
            if(imgSource != null && jSliderUmbralizacion.hasFocus()){    
                imgSource=convertImageType(imgSource,BufferedImage.TYPE_INT_ARGB);
                Umbralizacion uop = new Umbralizacion(jSliderUmbralizacion.getValue());
                uop.filter(imgSource, vi.getLienzo().getImage(false));
                escritorio.repaint();
            }
            else{
                System.out.println("No hay imagen o es nula");
            }
        }else{
            System.out.println("No hay ventana interna o es nula");
        }
    }//GEN-LAST:event_jSliderUmbralizacionStateChanged

    private void jSliderUmbralizacionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSliderUmbralizacionFocusGained
        vi = (VentanaInterna)(escritorio.getSelectedFrame());
        if(vi!=null){
            ColorModel cm = vi.getLienzo().getImage().getColorModel();
            WritableRaster raster = vi.getLienzo().getImage().copyData(null);
            boolean alfaPre = vi.getLienzo().getImage().isAlphaPremultiplied();
            imgSource = new BufferedImage(cm,raster,alfaPre,null);
        }
    }//GEN-LAST:event_jSliderUmbralizacionFocusGained

    private void jSliderUmbralizacionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSliderUmbralizacionFocusLost
        imgSource = null;
        this.jSliderUmbralizacion.setValue(127);
        this.escritorio.repaint();
    }//GEN-LAST:event_jSliderUmbralizacionFocusLost
    
    public LookupTable seno(double w){
        double K = 255.0; // Cte de normalización
        byte[] lt = new byte[256];
        for (int l = 0; l <= 255; ++l) {
            lt[l] = (byte) (K * Math.abs(Math.sin(Math.toRadians(w * l))));
        }
        LookupTable slt = new ByteLookupTable(0,lt);
        return slt;
    }
    
    public void setLabel(String herramienta){
        jLabelEstado.setText(herramienta);
    }

    public void setLabelPosicion(Point2D posicion){
        jLabelPosicion.setText("[" + posicion.getX() + ", " + posicion.getY() + "]");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.ButtonGroup buttonGroup;
    protected javax.swing.ButtonGroup buttonGroupOpciones;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JButton jButtonAbrir;
    private javax.swing.JButton jButtonAumentarEscala;
    private javax.swing.JButton jButtonColor;
    private javax.swing.JButton jButtonDisminuirEscala;
    private javax.swing.JButton jButtonEcualizacion;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonNormal;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JButton jButtonOscuridad;
    private javax.swing.JButton jButtonRotacion180;
    private javax.swing.JButton jButtonRotacion270;
    private javax.swing.JButton jButtonRotacion90;
    private javax.swing.JButton jButtonSeno;
    private javax.swing.JButton jButtonSepia;
    private javax.swing.JButton jButtonSobreExpuesta;
    private javax.swing.JButton jButtonTintado;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemConvolve;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemRescaleOp;
    private javax.swing.JComboBox jComboBoxColores;
    private javax.swing.JComboBox<String> jComboBoxEspacioColor;
    private javax.swing.JComboBox<String> jComboBoxFiltros;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelBrillo;
    private javax.swing.JLabel jLabelColor;
    private javax.swing.JLabel jLabelEscala;
    protected javax.swing.JLabel jLabelEstado;
    private javax.swing.JLabel jLabelFiltro;
    private javax.swing.JLabel jLabelOtros;
    private javax.swing.JLabel jLabelPosicion;
    protected javax.swing.JLabel jLabelRGB;
    private javax.swing.JLabel jLabelRotacion;
    private javax.swing.JLabel jLabelUmbralizacion;
    private javax.swing.JMenu jMenuArchivo;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuEdicion;
    private javax.swing.JMenu jMenuImagen;
    private javax.swing.JMenuItem jMenuItemDuplicar;
    private javax.swing.JMenuItem jMenuItemNegativo;
    private javax.swing.JPanel jPanelBotonesColor;
    private javax.swing.JPanel jPanelBotonesContraste;
    private javax.swing.JPanel jPanelBotonesEscala;
    private javax.swing.JPanel jPanelBotonesOtros;
    private javax.swing.JPanel jPanelBotonesRotacion;
    private javax.swing.JPanel jPanelBrillo;
    private javax.swing.JPanel jPanelCentral;
    private javax.swing.JPanel jPanelColor;
    private javax.swing.JPanel jPanelConstraste;
    private javax.swing.JPanel jPanelEscala;
    private javax.swing.JPanel jPanelEstado;
    private javax.swing.JPanel jPanelFiltro;
    private javax.swing.JPanel jPanelOpcionesRotacion;
    private javax.swing.JPanel jPanelOtros;
    private javax.swing.JPanel jPanelSeparador1;
    private javax.swing.JPanel jPanelSeparador2;
    private javax.swing.JPanel jPanelSeparador3;
    private javax.swing.JPanel jPanelSeparador4;
    private javax.swing.JPanel jPanelSeparador5;
    private javax.swing.JPanel jPanelSeparador6;
    private javax.swing.JPanel jPanelSeparador7;
    private javax.swing.JPanel jPanelSeparador8;
    private javax.swing.JPanel jPanelSeparador9;
    private javax.swing.JPanel jPanelUmbralizacion;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSlider jSliderBrillo;
    private javax.swing.JSlider jSliderRotacion;
    private javax.swing.JSlider jSliderUmbralizacion;
    protected javax.swing.JSpinner jSpinnerGrosor;
    protected javax.swing.JToggleButton jToggleButtonAlisado;
    protected javax.swing.JToggleButton jToggleButtonEditar;
    protected javax.swing.JToggleButton jToggleButtonLapiz;
    protected javax.swing.JToggleButton jToggleButtonLinea;
    protected javax.swing.JToggleButton jToggleButtonOvalo;
    protected javax.swing.JToggleButton jToggleButtonRectangulo;
    protected javax.swing.JToggleButton jToggleButtonRelleno;
    private javax.swing.JToggleButton jToggleButtonRoundRectangle;
    protected javax.swing.JToggleButton jToggleButtonTransparencia;
    private javax.swing.JToolBar jToolBarEdicion;
    private javax.swing.JToolBar jToolBarHerramientas;
    // End of variables declaration//GEN-END:variables
}
